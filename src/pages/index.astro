---
import { initializeApp } from 'firebase/app';
import { getDatabase, ref, child, get } from 'firebase/database';
import Layout from '../layouts/Layout.astro';
import Card, { Props as CardProps } from '../components/Card.astro';
import githubIcon from '../assets/github.svg';
import linkedinIcon from '../assets/linkedin.svg';
import link from '../assets/link.svg';
import profile from '../assets/profile.jpg';

const firebaseConfig = {
  apiKey: import.meta.env.API_KEY,
  authDomain: import.meta.env.AUTH_DOMAIN,
  databaseURL: import.meta.env.DATABASE_URL,
  projectId: import.meta.env.PROJECT_ID,
  storageBucket: import.meta.env.STORAGE_BUCKET,
  messagingSenderId: import.meta.env.MESSAGING_SENDER_ID,
  appId: import.meta.env.APP_ID
};

initializeApp(firebaseConfig);

let projects = []
const db = ref(getDatabase())
const snapshot = await get(child(db, 'projects'))

if (snapshot.exists()) {
	projects = snapshot.val()
}
---

<Layout
	title="Augusto Yuudi Shiraishi"
	description="Augusto's portfolio"
>
	<main class="main">
		<header class="main__header">
			<h1 class="title">
				Augusto Y. Shiraishi
			</h1>
			<h2 class="subtitle">Software Engineer at Delivery Much</h2>
			<p class="introduction">I build high quality frontend solutions for <a href="https://deliverymuch.com.br/" target="_blank" rel="noreferrer">Delivery Much</a>.</p>
			<ul class="socials">
				<li class="profile">
					<img src={profile} alt="Augusto's profile picture" width={48} height={48} />
				</li>
				<li class="social">
					<a href="https://github.com/augustoyuudi" target="_blank" rel="noreferrer">
						<img src={githubIcon} alt="Github icon" width={24} height={24} />
						Github
						<img src={link} alt="Link icon" width={16} height={16} />
					</a>
				</li>
				<li class="social">
					<a href="https://www.linkedin.com/in/augustoyuudi/" target="_blank" rel="noreferrer">
						<img src={linkedinIcon} alt="Linkedin icon" width={24} height={24} />
						Linkedin
						<img src={link} alt="Link icon" width={16} height={16} />
					</a>
				</li>
			</ul>
		</header>
		<section class="main__projects">
			<h2 class="section-title">PROJECTS</h2>
			<ul class="cards">
				{
					projects.map((project: CardProps) => {
						return (
							<li>
								<Card
									name={project.name}
									description={project.description}
									technology={project.technology}
									link={project.link}
								/>
							</li>
						)
					})
				}
			</ul>
		</section>
	</main>
</Layout>

<style>
	.main {
		display: flex;
		flex-direction: column;
		gap: 3rem 0;
		height: 100%;
		max-width: 1350px;
		margin: 0 auto;
		padding: 2rem;
	}

	.main__header {
		display: flex;
		flex-direction: column;
	}

	.title {
		font-weight: 700;
		font-size: 3rem;
		margin-bottom: .75rem;
	}

	.subtitle {
		font-weight: 600;
		font-size: 1.5rem;
		margin-bottom: 2rem;
	}

	.introduction {
		color: rgb(148 148 149/1);
		margin-bottom: 2rem;
	}

	.introduction a {
		color: #fff;
		text-decoration: underline;
	}

	.socials {
		display: flex;
		align-items: center;
		gap: 1.5rem;
	}

	.social a {
		display: flex;
		align-items: center;
		gap: .5rem;
	}

	.profile {
		display: none;
	}

	.profile img {
		object-fit: cover;
		border-radius: 50%;
	}

	.section-title {
		letter-spacing: 3px;
		font-size: 0.75rem;
		font-weight: 700;
		margin-bottom: 2rem;
	}

	.cards {
		display: flex;
		flex-direction: column;
		justify-content: center;
		gap: .5rem;
		transition: opacity .2s ease-in-out;
	}

	@media screen and (min-width: 992px) {
		.home {
			padding: 5.5rem 2rem;
			height: 100vh;
		}

		.main {
			flex-direction: row;
			justify-content: space-between;
		}

		.main__header,
		.main__projects {
			flex-basis: 50%;
		}

		.socials {
			margin-top: auto;
		}

		.profile {
			display: list-item;
		}

		.section-title {
			display: none;
		}

		.cards:hover :global(article) {
			opacity: .5;
		}

		.cards :global(article):hover {
			opacity: 1;
			transform: scale(1.1);
		}
	}
</style>
